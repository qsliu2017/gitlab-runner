variables:
  # renovate: datasource=docker depName=golang allowedVersions=/1\.20\..+/
  GO_VERSION: "1.20.10"
  # Sometimes the FIPS repo lags behind the official releases
  GO_FIPS_VERSION: "1.20.10"
  CI_IMAGE: "registry.gitlab.com/gitlab-org/gitlab-runner/ci:$GO_VERSION-bullseye"
  # Feature flags
  FF_SCRIPT_SECTIONS: "true"
  FF_USE_FASTZIP: "true"
  FF_USE_NEW_BASH_EVAL_STRATEGY: "true"
  # Following variables are used in some jobs to install specified software
  RELEASE_INDEX_GEN_VERSION: "latest"
  DOCKER_VERSION: 23.0.5
  DOCKER_MACHINE_VERSION: "v0.16.2-gitlab.21"
  BUILDX_VERSION: 0.10.4
  KUBECTL_VERSION: 1.23.0
  AWS_CLI_VERSION: 2.4.19
  DUMB_INIT_VERSION: "1.2.5"
  GIT_VERSION: "2.40.1"
  GIT_VERSION_BUILD: "1"
  GIT_LFS_VERSION: "3.4.0"
  YQ_VERSION: "4.30.5"
  LICENSE_MANAGEMENT_SETUP_CMD: echo "Skip setup. Dependency already vendored"
  DOCS_GITLAB_REPO_SUFFIX: "runner"
  # We're overriding rules for the jobs that we want to run.
  # This will disable all other rules.
  SAST_DISABLED: "true"
  DEPENDENCY_SCANNING_DISABLED: "true"
  TRANSFER_METER_FREQUENCY: "5s"
  GO111MODULE: "on"
  GO_FIPS_IMAGE: registry.gitlab.com/gitlab-org/gitlab-runner/go-fips:$GO_FIPS_VERSION
  # renovate: datasource=docker depName=alpine allowedVersions=/3\.15\..+/
  ALPINE_315_VERSION: "3.15.8"
  # renovate: datasource=docker depName=alpine allowedVersions=/3\.16\..+/
  ALPINE_316_VERSION: "3.16.5"
  # renovate: datasource=docker depName=alpine allowedVersions=/3\.17\..+/
  ALPINE_317_VERSION: "3.17.3"
  # renovate: datasource=docker depName=alpine allowedVersions=/3\.18\..+/
  ALPINE_318_VERSION: "3.18.2"
  # renovate: datasource=docker depName=ubuntu allowedVersions=/20\..+/
  UBUNTU_VERSION: "20.04"
  # renovate: datasource=docker depName=redhat/ubi8-minimal versioning=redhat allowedVersions=/8\.8-.+/
  UBI_FIPS_VERSION: "8.8-860"
  UBI_FIPS_BASE_IMAGE: registry.gitlab.com/gitlab-org/gitlab-runner/ubi-fips-base:$UBI_FIPS_VERSION

default:
  image: $CI_IMAGE
  tags:
  - gitlab-org
  retry:
    max: 2
    when:
    - runner_system_failure

.no_cache:
  cache: {}

.no_dependencies:
  dependencies: []

.no_cache_and_dependencies:
  extends:
  - .no_cache
  - .no_dependencies

.docker:
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_CERT_PATH: "/certs/client"
  tags:
  - gitlab-org-docker

.docker_qemu-before_script: &docker_qemu-before_script
- docker run --privileged --rm tonistiigi/binfmt --install all

.docker_qemu:
  before_script:
  - *docker_qemu-before_script

.go-cache:
  variables:
    GOCACHE: $CI_PROJECT_DIR/.gocache-$CI_COMMIT_REF_PROTECTED
  before_script:
  - mkdir -p "$GOCACHE"
  cache:
    paths:
    - $CI_PROJECT_DIR/.gocache-false/
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"

.go-cache-docker-qemu:
  extends:
  - .go-cache
  before_script:
  - *docker_qemu-before_script
  - mkdir -p "$GOCACHE"

.go-cache-windows:
  variables:
    GOCACHE: $CI_PROJECT_DIR\.gocache-$CI_COMMIT_REF_PROTECTED
  before_script:
  - New-Item -Path "$Env:GOCACHE" -Type Directory -Force
  cache:
    paths:
    - $CI_PROJECT_DIR\.gocache-false\
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"

.linux-dependency-checksums:
  variables:
    DOCKER_MACHINE_LINUX_AMD64_CHECKSUM: "a4e9a416f30406772e76c3b9e795121d5a7e677978923f96b7fb72f0d8354740"
    DOCKER_MACHINE_LINUX_ARM64_CHECKSUM: "124ceefbe1a1eec44eeb932edf9f85dab1e532d449f5e3e236faed5e8b19caba"
    DUMB_INIT_LINUX_AMD64_CHECKSUM: "e874b55f3279ca41415d290c512a7ba9d08f98041b28ae7c2acb19a545f1c4df"
    DUMB_INIT_LINUX_ARM64_CHECKSUM: "b7d648f97154a99c539b63c55979cd29f005f88430fb383007fe3458340b795e"
    DUMB_INIT_LINUX_S390X_CHECKSUM: "47e4601b152fc6dcb1891e66c30ecc62a2939fd7ffd1515a7c30f281cfec53b7"
    DUMB_INIT_LINUX_PPC64LE_CHECKSUM: "3d15e80e29f0f4fa1fc686b00613a2220bc37e83a35283d4b4cca1fbd0a5609f"
    GIT_LFS_LINUX_AMD64_CHECKSUM: "60b7e9b9b4bca04405af58a2cd5dff3e68a5607c5bc39ee88a5256dd7a07f58c"
    GIT_LFS_LINUX_ARM64_CHECKSUM: "aee90114f8f2eb5a11c1a6e9f1703a2bfcb4dc1fc4ba12a3a574c3a86952a5d0"
    GIT_LFS_LINUX_S390X_CHECKSUM: "494191655c638f0a75d4d026ef58dc124fc4845361a144a0d1ade3986f2bb6e0"
    GIT_LFS_LINUX_PPC64LE_CHECKSUM: "1ed0277cf0ae309a4800971581ff169bbff5c865718250b11090f6a9386f7533"

.windows-dependency-checksums:
  variables:
    GIT_WINDOWS_AMD64_CHECKSUM: "36498716572394918625476ca207df3d5f8b535a669e9aad7a99919d0179848c"
    GIT_LFS_WINDOWS_AMD64_CHECKSUM: "5edafb149bc6cf7e2e8e52d18b031bdaad9a26101cc9dbbf8a3a5da03ac066f2"
    PWSH_WINDOWS_AMD64_CHECKSUM: "CF0C8BD757EEC6434A5830352EA6F15ACE237296BB7E4AE778F7707583023AC3"

.windows1809_variables:
  variables:
    WINDOWS_VERSION: servercore1809

.windows1809:
  extends:
  - .windows1809_variables
  tags:
  - shared-windows
  - windows
  - windows-1809

.windows1809_nano:
  extends:
  - .windows1809
  variables:
    WINDOWS_VERSION: nanoserver1809

.windows21H2_variables:
  variables:
    WINDOWS_VERSION: servercore21H2

.windows21H2:
  extends:
  - .windows21H2_variables
  tags:
  - windows
  - windows-21h1 # todo: use windows-2022 when ready (https://gitlab.com/gitlab-org/ci-cd/shared-runners/infrastructure/-/issues/61)

.windows21H2_nano:
  extends:
  - .windows21H2
  variables:
    WINDOWS_VERSION: nanoserver21H2

# .stage_done is used as a sentinel at stage n for stage n-1 completion, so we can kick off builds in later stages
# without explicitly waiting for the completion of the n-1 stage
.stage_done:
  extends:
  - .no_cache_and_dependencies
  - .rules:merge_request_pipelines
  image: alpine:latest
  variables:
    GIT_STRATEGY: none
  script:
  - exit 0
